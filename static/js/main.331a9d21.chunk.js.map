{"version":3,"sources":["components/Text.js","components/Author.js","components/Links.js","components/Button.js","components/QuoteBox.js","App.js","index.js"],"names":["Text","quote","className","Author","author","Link","children","props","target","rel","Links","twitterLink","encodeURIComponent","href","id","Button","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","QuoteBox","changeBg","useState","setQuote","setAuthor","useEffect","fetchRandomQuote","fetch","then","res","json","data","quotes","randomNum","random","length","catch","err","console","log","App","bgUrl","setbgUrl","bgArray","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAUeA,EARF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACd,OACE,oBAAGC,UAAU,OAAb,UACE,cAAC,IAAD,IADF,IACmBD,MCDRE,EAJA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OAAO,oBAAGF,UAAU,SAAb,gBAA0BE,M,cCEnC,SAASC,EAAT,GAAuC,IAAvBC,EAAsB,EAAtBA,SAAaC,EAAS,4BACpC,OACE,6CAAOA,GAAP,IAAcL,UAAU,OAAOM,OAAO,SAASC,IAAI,sBAAnD,SACGH,KAmBQI,MAdf,YAAmC,IAAlBT,EAAiB,EAAjBA,MAAOG,EAAU,EAAVA,OAChBO,EAAW,gDAA4CC,mBAAmB,IAAD,OACzEX,EADyE,eAC7DG,IADD,oBAIjB,OACE,qBAAKF,UAAU,QAAf,SACE,cAACG,EAAD,CAAMQ,KAAMF,EAAaG,GAAG,cAA5B,SACE,cAAC,IAAD,CAAWZ,UAAU,cCMda,MAvBf,YAA8B,IAAZC,EAAW,EAAXA,QAChB,OACE,yBAAQd,UAAU,iBAAiBc,QAASA,EAA5C,UACG,IADH,YAEY,IACV,qBACEC,MAAM,6BACNf,UAAU,aACVgB,KAAK,OACLC,QAAQ,YACRC,OAAO,eALT,SAOE,sBACEC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,oCC2CGC,EAnDE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAElB,EAA0BC,mBAAS,IAAnC,mBAAO1B,EAAP,KAAc2B,EAAd,KACA,EAA4BD,mBAAS,IAArC,mBAAOvB,EAAP,KAAeyB,EAAf,KAGAC,qBAAU,WACRC,MACC,IAEH,IAOMA,EAAmB,WACvBC,MApBF,0IAqBKC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAMC,EAASD,EAAKC,OAEdC,EAAYC,iBAAO,EAAGF,EAAOG,QAEnCZ,EAASS,EAAOC,GAAWrC,OAC3B4B,EAAUQ,EAAOC,GAAWlC,WAE7BqC,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZb,EAAU,oBACVD,EACE,gFAKR,OACE,cAAC,WAAD,UACE,sBAAK1B,UAAU,WAAf,UACE,cAAC,EAAD,CAAMD,MAAOA,IACb,cAAC,EAAD,CAAQG,OAAQA,IAChB,sBAAKF,UAAU,YAAf,UACE,cAAC,EAAD,CAAOD,MAAOA,EAAOG,OAAQA,IAC7B,cAAC,EAAD,CAAQY,QAlCS,WACvBU,IACAK,gBC6BWc,MA/Cf,WACE,MAA0BlB,mBACxB,6CADF,mBAAOmB,EAAP,KAAcC,EAAd,KAIMC,EAAU,CACd,CAAC,6DACD,CAAC,8DACD,CAAC,wDACD,CAAC,uDACD,CAAC,wDACD,CAAC,sDACD,CAAC,qDACD,CAAC,wDACD,CAAC,sDACD,CAAC,wDACD,CAAC,0DACD,CAAC,wDACD,CAAC,yDACD,CAAC,wDACD,CAAC,qDACD,CAAC,qDACD,CAAC,qDACD,CAAC,4DACD,CAAC,6DACD,CAAC,yDACD,CAAC,uDACD,CAAC,sDACD,CAAC,uDAGGC,EAAQ,CACZ,QAASH,GAQX,OACE,qBAAK5C,UAAU,MAAM+C,MAAOA,EAA5B,SACE,cAAC,EAAD,CAAUvB,SAPG,WACf,IAAMY,EAAYC,iBAAO,EAAGS,EAAQR,QACpCO,EAASC,EAAQV,UCpCrBY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.331a9d21.chunk.js","sourcesContent":["import { FaQuoteLeft } from 'react-icons/fa';\n\nconst Text = ({ quote }) => {\n  return (\n    <p className='Text'>\n      <FaQuoteLeft /> {quote}\n    </p>\n  );\n};\n\nexport default Text;\n","const Author = ({ author }) => {\n  return <p className='Author'> - {author}</p>;\n};\n\nexport default Author;\n","import React from 'react';\nimport { FaTwitter } from 'react-icons/fa';\n\nfunction Link({ children, ...props }) {\n  return (\n    <a {...props} className='Link' target='_blank' rel='noopener noreferrer'>\n      {children}\n    </a>\n  );\n}\n\nfunction Links({ quote, author }) {\n  const twitterLink = `https://twitter.com/intent/tweet?text=${encodeURIComponent(\n    `\"${quote}\" - ${author}`\n  )}&hashtags=quotes`;\n\n  return (\n    <div className='Links'>\n      <Link href={twitterLink} id='tweet-quote'>\n        <FaTwitter className='icon' />\n      </Link>\n    </div>\n  );\n}\n\nexport default Links;\n","import React from 'react';\n\nfunction Button({ onClick }) {\n  return (\n    <button className='NewQuoteButton' onClick={onClick}>\n      {' '}\n      New Quote{' '}\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        className='ButtonIcon'\n        fill='none'\n        viewBox='0 0 24 24'\n        stroke='currentColor'\n      >\n        <path\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeWidth={2}\n          d='M13 5l7 7-7 7M5 5l7 7-7 7'\n        />\n      </svg>\n    </button>\n  );\n}\n\nexport default Button;\n","import { Fragment, useEffect, useState } from 'react';\nimport { random } from 'lodash';\nimport Text from './Text';\nimport Author from './Author';\nimport Links from './Links';\nimport Button from './Button';\n\nconst quotesURL =\n  'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\n\nconst QuoteBox = ({ changeBg }) => {\n  // useState hook\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n\n  // Use Effect Hook to fetch API at first render\n  useEffect(() => {\n    fetchRandomQuote();\n  }, []);\n\n  const generateNewQuote = () => {\n    changeBg();\n    fetchRandomQuote();\n  };\n\n  // Fetch randomQuote RestAPI\n\n  const fetchRandomQuote = () => {\n    fetch(quotesURL)\n      .then((res) => res.json())\n      .then((data) => {\n        const quotes = data.quotes;\n        // Lodash random method\n        const randomNum = random(0, quotes.length);\n\n        setQuote(quotes[randomNum].quote);\n        setAuthor(quotes[randomNum].author);\n      })\n      .catch((err) => {\n        console.log(err);\n        setAuthor('Jerome Tolentino');\n        setQuote(\n          'There is something wrong with the random quote machine. Try again later!'\n        );\n      });\n  };\n\n  return (\n    <Fragment>\n      <div className='QuoteBox'>\n        <Text quote={quote} />\n        <Author author={author} />\n        <div className='BottomRow'>\n          <Links quote={quote} author={author} />\n          <Button onClick={generateNewQuote} />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default QuoteBox;\n","import { useState } from 'react';\nimport QuoteBox from './components/QuoteBox';\nimport { random } from 'lodash';\n\nfunction App() {\n  const [bgUrl, setbgUrl] = useState(\n    \"url('https://source.unsplash.com/random')\"\n  );\n\n  const bgArray = [\n    [\"url('https://source.unsplash.com/1600x900/?nature,water')\"],\n    [\"url('https://source.unsplash.com/1600x900/?children,play')\"],\n    [\"url('https://source.unsplash.com/1600x900/?success')\"],\n    [\"url('https://source.unsplash.com/1600x900/?forest')\"],\n    [\"url('https://source.unsplash.com/1600x900/?fashion')\"],\n    [\"url('https://source.unsplash.com/1600x900/?suits')\"],\n    [\"url('https://source.unsplash.com/1600x900/?city')\"],\n    [\"url('https://source.unsplash.com/1600x900/?fitness')\"],\n    [\"url('https://source.unsplash.com/1600x900/?storm')\"],\n    [\"url('https://source.unsplash.com/1600x900/?animals')\"],\n    [\"url('https://source.unsplash.com/1600x900/?mountains')\"],\n    [\"url('https://source.unsplash.com/1600x900/?running')\"],\n    [\"url('https://source.unsplash.com/1600x900/?business')\"],\n    [\"url('https://source.unsplash.com/1600x900/?working')\"],\n    [\"url('https://source.unsplash.com/1600x900/?race')\"],\n    [\"url('https://source.unsplash.com/1600x900/?cars')\"],\n    [\"url('https://source.unsplash.com/1600x900/?rich')\"],\n    [\"url('https://source.unsplash.com/1600x900/?fashionable')\"],\n    [\"url('https://source.unsplash.com/1600x900/?construction')\"],\n    [\"url('https://source.unsplash.com/1600x900/?building')\"],\n    [\"url('https://source.unsplash.com/1600x900/?growth')\"],\n    [\"url('https://source.unsplash.com/1600x900/?ocean')\"],\n    [\"url('https://source.unsplash.com/1600x900/?river')\"],\n  ];\n\n  const style = {\n    '--url': bgUrl,\n  };\n\n  const changeBg = () => {\n    const randomNum = random(0, bgArray.length);\n    setbgUrl(bgArray[randomNum]);\n  };\n\n  return (\n    <div className='App' style={style}>\n      <QuoteBox changeBg={changeBg} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}